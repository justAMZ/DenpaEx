var PlayState = require("PlayState");
var FlxTypedGroup = require("flixel.group.FlxGroup.FlxTypedGroup");
var StrumNote = require("Note.StrumNote");
var FlxG = require("flixel.FlxG");
var Math = require("Math");
var Conductor = require("Conductor");
var ClientPrefs = require("ClientPrefs");

var strum:FlxTypedGroup<StrumNote>;
var strumNum:Int = 0;

function onStartModchart(str) {
    switch (str) {
        case 0:
            strum = PlayState.instance.playerStrums;
        case 1:
            strum = PlayState.instance.opponentStrums;
        case 2:
            strum = PlayState.instance.thirdStrums;
    }
    strumNum = str;
}

function onUpdatePost(elapsed) {
    var elapsedtime = PlayState.instance.elapsedtime;
    var add = (strumNum == 2 ? [PlayState.instance.player4.x, PlayState.instance.player4.y] : [0,0]);
    strum.forEach(function(spr:StrumNote)
	{
        if (strumNum == 0) {
			spr.x = (spr.ID*spr.width*1.05 + 750) - 300 * Math.sin(elapsedtime*2.5*Conductor.bpm/300 + spr.ID*0) - 275;
			spr.y = (ClientPrefs.settings.get("downScroll") ? FlxG.height - 150 : 50) - 64 * Math.cos((elapsedtime*2 + spr.ID*5) * Math.PI);
        } else {
			spr.x = ((spr.ID*spr.width*1.05 + 600) + 300 * Math.sin(elapsedtime*2.5*Conductor.bpm/300 + spr.ID*0) - 275) + add[0];
			spr.y = (ClientPrefs.settings.get("downScroll") ? FlxG.height - 150 : 50) + 64 * Math.cos((elapsedtime*2 + spr.ID*5) * Math.PI) + add[1];
        }
	});
}